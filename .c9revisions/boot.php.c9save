{"ts":1354970847081,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\nrequire __DIR__.'/external/spyc/spyc.php';\n$core = null;\nif(! isset($co3Config) ){\n    $co3Config = array();\n}\ncall_user_func(\nfunction(){\n    global\n        $co3Config,\n        $core;\n        \n    //load conf\n    $spyc = new Spyc();\n    $configFile = __DIR__.'/conf.yaml';\n    if(! is_readable($configFile)){\n        throw new Exception(\n            \"co3 Bootstrap error: \"\n            .\"Missing system file '{$confFile}'\"\n        );\n    }\n    $conf = $spyc->load( file_get_contents($configFile), true );\n    if( $conf === null) throw new Exception(\n            \"co3 Bootstrap error: \"\n            .\"Parsing config file failed: '{$configFile}'\"\n    );\n    $localConfigFile = dirname($_SERVER['SCRIPT_FILENAME']).\"/conf.yaml\";\n    if(is_readable($localConfigFile)){\n        $localConfig = $spyc->load( file_get_contents($localConfigFile), true );\n        if( $localConfig === null) throw new Exception(\n            \"co3 Bootstrap error: \"\n            .\"Parsing local config file failed: '{$localConfigFile}'\"\n        );\n        $conf = array_replace_recursive( $conf, $localConfig ); \n    }\n    $conf = array_replace_recursive(\n        $conf,\n        $co3Config\n    );\n\n    array_walk_recursive(\n        $conf,\n        function(&$val, $key, $vars){\n            $val = str_replace(\n                array_keys($vars),\n                $vars,\n                $val\n            );\n        },\n        array( \n            '#BOOT#'        => __FILE__,\n            '#BOOT_DIR#'    => __DIR__,\n            '#CONFIG#'      => $configFile,\n            '#CONFIG_DIR#'  => dirname($configFile),\n            '#SCRIPT#'      => $_SERVER['SCRIPT_FILENAME'],\n            '#SCRIPT_DIR#'  => dirname($_SERVER['SCRIPT_FILENAME']),\n            '#SCRIPT_HASH#' => md5($_SERVER['SCRIPT_FILENAME'])\n        )\n    );    \n    foreach($conf['path'] as $dir){\n        if(! file_exists($dir)){\n            mkdir($dir, 0777, true);\n        }\n    }\n    //require files\n    if(isset($conf['require'])){\n        foreach($conf['require'] as $required){\n            require $required;\n        }\n    }\n    \n    //craete objects\n    $exceptioMessage = \"Co3 Bootstrap error: Missing core config key \";\n    if(! isset($conf['core'])){\n        throw new Exception($exceptioMessage.'core');\n    }\n    if(! isset($conf['core']['class'])){\n        throw new Exception($exceptionMessage.'core/class');\n    }\n    if(! isset($conf[$key]['args'])){\n        $conf['core']['args'] = array();\n    }\n    $class = $conf['core']['class'];\n    $args = isset( $conf['core']['args'] )\n        ? $conf[$key]['args']\n        : false;            \n    if($args){\n        $reflection = new ReflectionClass($class);\n        $core =  $reflection->newInstanceArgs($args);\n    } else {\n        $core = new $class();\n    }\n    \n    //DFTBA\n    $core->boot($conf);\n});"]],"start1":0,"start2":0,"length1":0,"length2":2805}]],"length":2805}
{"contributors":[],"silentsave":true,"ts":1354970856973,"patch":[[{"diffs":[[0," $core;\n"],[-1,"        \n"],[0,"    //lo"]],"start1":183,"start2":183,"length1":25,"length2":16},{"diffs":[[0,"  }\n"],[-1,"    if(! isset($conf[$key]['args'])){\n        $conf['core']['args'] = array();\n    }\n"],[0,"    "]],"start1":2355,"start2":2355,"length1":93,"length2":8},{"diffs":[[0,"? $conf["],[-1,"$key"],[1,"'core'"],[0,"]['args'"]],"start1":2447,"start2":2447,"length1":20,"length2":22},{"diffs":[[0,"ss();\n    }\n"],[-1,"    \n"],[0,"    //DFTBA\n"]],"start1":2657,"start2":2657,"length1":29,"length2":24}]],"length":2708,"saved":false}
