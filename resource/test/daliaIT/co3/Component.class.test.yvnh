type: daliaIT\co3\test\ClassTest 
value:
  class: daliaIT\co3\Component
  mocks:
    FileFilterMock: >
        class FileFilterMock{
          public $data = array();
          public function in($path){
            if( isset($this->data[$path]) ){
              return $this->data[$path];
            } else {
              throw new Exception("invalid path $path");
            }
          }
        }
      
    IOPluginMock: >
        class IOPluginMock{
          public $file,$resource;
          public function __construct(){
            $this->file = new FileFilterMock;
             $this->resource = new FileFilterMock;
          }
        }
      
    CoreMock: >
        class CoreMock extends daliaIT\co3\Inject{
          public $IO;
          public function __construct(){
              $this->IO = new IOPluginMock();
          }
        }
  vars:
    text:           a sample text
    textPath:       mock/text.txt
    format:         say %s and %s
    formatPath:     mock/format.txt
    formatedText:   say one and two
    args:           [one, two]
    
  methodTests:
    isList: true
    type:   daliaIT\co3\test\MethodTest
    value:
      _01_getText_works:
        method: getText
        description : |
            Using getText calls the file filter.
        steps:
          - $this->core = new CoreMock();
          - $this->core->IO->file->data[$textPath] = $text;
          - $log .= "set text '$text',";
          - $result = $this->getText($textPath);
          - $log .= " result '$result',";
          - return $result === $text;
      
      _02_getText_without_core:
        method: getText
        description : |
            Calling the method without setting the core 
            should throw an exception
        steps:
          - |
            try{
              $this->getText($textPath);
              $log .= "No exception thrown";
              return false;
            }
            catch(Exception $e){
              return true;
            }
    
      _03_unkown_text:
        method: getText
        description : >
            Requesting a unkown resource should throw
            an Exception.
        steps:
          - $this->core =  new CoreMock();
          - >
            try{
              $this->getText("unset/text.txt");
              $log .= "\nNo exception thrown";
              return false;
            }
            catch(Exception $e){
              return true;
            }
        
      _04_formtaArgs_works:    
        method: formatArgs
        description: |
          The text is formated sprinf style.
        steps:
          - $this->core = new CoreMock();
          - $this->core->IO->file->data[$formatPath] = $format;
          - $log .= "format= '$format', ";
          - $result =$this->formatArgs($formatPath, $args[0], $args[1]);
          - $log .= "\$args =".var_export($args,true);
          - $log .="result= '$result', expected= '$formatedText'";
          - return $result === $formatedText;
